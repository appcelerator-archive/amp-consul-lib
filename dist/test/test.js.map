{"version":3,"sources":["../../src/test/test.js"],"names":[],"mappings":"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","file":"test.js","sourcesContent":["import 'source-map-support/register'\nimport assert from 'assert'\nimport log from 'amp-log-lib'\nlog.init({ name:'amp-consul-test' })\n\nimport { Consul } from '..'\n\n\nfunction sleep(ms) {\n  return new Promise((resolve, reject) => {\n    setTimeout(resolve, ms);\n  });\n}\n\nasync function incr_unsafe(c, key) {\n  const r = await c.get_json(key)\n  await c.set_json(key, r + 1)\n}\n\nasync function incr_safe(c, key) {\n  await c.update_json(key, (r) => {\n    return r + 1\n  })\n}\n\ndescribe('amp-consul-lib', function() {\n  let c = new Consul()\n  const n = 10\n  before(async () => {\n    console.log (\"starting...\")\n    let ok\n    do {\n      ok = false\n      try {\n        const h = await c.client.health.node('node1')\n        console.log(h)\n        ok = true\n      } catch (e) {\n        console.log(\"Error:\", e.message)\n      }\n      if (!ok)\n        await sleep(1000)\n    } while (!ok)\n  })\n\n  it('should store and retrieve a value from consul', async function() {\n    let result\n    await c.set('hello', 'world')\n    result = await c.get('hello')\n    assert.equal(result.Value, 'world')\n  })\n\n  it('should store and retrieve a key value recursively from consul', async function() {\n    let result\n    await c.set('key1', 'val1')\n    result = await c.get('key1')\n    assert.equal(result.Value, 'val1')\n\n    result = await c.set('key1/key2', 'val2')\n    result = await c.get('key1/key2')\n    assert.equal(result.Value, 'val2')\n\n    result = await c.get({\n      key: 'key1',\n      recurse: true\n    })\n    assert.equal(result[0].Key, 'key1')\n    assert.equal(result[0].Value, 'val1')\n    assert.equal(result[1].Key, 'key1/key2')\n    assert.equal(result[1].Value, 'val2')\n  })\n\n  it('should update consul entry (sync/unsafe) -> good', async function() {\n    const key = 'key3'\n    await c.set_json(key, 1)\n    let v = await c.get_json(key)\n    assert.equal(v, 1)\n\n    for (let i = 0; i < n; i++) {\n      await incr_unsafe(c, key)\n    }\n\n    v = await c.get_json(key)\n    assert.equal(v, n + 1)\n  })\n\n  it('should update consul entry (async/unsafe) -> bad', async function() {\n    const key = 'key4'\n    await c.set_json(key, 1)\n    let v = await c.get_json(key)\n    assert.equal(v, 1)\n    let all = []\n    for (let i = 0; i < n; i++) {\n      all.push(incr_unsafe(c, key))\n    }\n    await Promise.all(all)\n\n    v = await c.get_json(key)\n    assert.notEqual(v, n + 1)\n  })\n\n  it('should update consul entry (async/safe) -> good', async function() {\n    const key = 'key4'\n    await c.set_json(key, 1)\n    let v = await c.get_json(key)\n    assert.equal(v, 1)\n    let all = []\n    for (let i = 0; i < n; i++) {\n      all.push(incr_safe(c, key))\n    }\n    await Promise.all(all)\n\n    v = await c.get_json(key)\n    assert.equal(v, n + 1)\n  })\n})\n"]}